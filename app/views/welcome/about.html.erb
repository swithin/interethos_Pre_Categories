<% @title = "About 'InterEthos'" %>

<%= error_messages_for :user %>

<a name="overview">
<%= render :partial => 'about_toolbar' %>
</a>
<p><strong>Overview</strong></p>

<p>Create a system to allow users to create and apply taxonomy indexes (ie. a "folksonomy" system) against the human spirit, and apply those to actual people's profiles. At its core the data system must have the flexibility to allow users from different cultures to be able to express totally different ways of thinking about spirituality (ie. taxonomy structures). </p>

<p>Users will also need to be able to create "lenses" with which to view the endless potential outputs that such a system will provide. Different users will want different lenses to view people around them. Users will also be able to suggested lenses that visitors might use in viewing their profile.</p>

<p>Subsystem of three validation levels of user identities: 
<ol>
<li>non- validated users: user identities created by parties other than the owner, and not claimed or maintained by the owners,</li>
<li>partially validated users: owners create and pro-actively link to their own identity, and </li>
<li>fully validated users: owners create, verify, and maintain their identity with a structured regularity and protocol.</li>
</ol>
Another dimension of validation will be the "longevity" of a person's identity within the system (ie. users who change their profiles "like people change their socks" will be given less authority than users who continually validate and maintain their profiles over many years). Higher validation levels will add authority to a user's postings to other users' profiles. This will be very important to protect against character assassination attempts.</p>

<p>Browser add-on application(s) will allow users to 
<ul>
<li>input a list of "people to watch for", which "listens" for appearances of those names on visited content. </li>
<li>Browsers may be visiting websites where mention is made of people measured by the system, and the depicted the "ethos" of said people will be displayed in the add-on's toolbar.</li>
<li>When such references are found, then the add-on application will pull and render interpretations of the XML profiles for referenced people (based on aforementioned "lenses")</li>
<li>The same renderings will allow manipulation of (posting to) those people's profiles. (Posting to other people's profiles will require that the users be registered in the system.)</li>
</ul></p>

<p>With the creation of a core data platform, then a system will be created to replicate the server into a "cloud" network of servers. The ultimate goal is to create a cloud that shard the overall data, and which preclude the possibility of one entity owning and/or controlling the platform.</p>

<p>One goal is for a person to be able to walk into a physical ballroom filled with a hundred people whom s/he has never met, and be able to immediately "assess" who is in the room. Maybe the person is looking for "like-minded" people, or people with similar skills, or people with a similar Myers Briggs profile. Maybe the person is looking for a "diamond in the rough" person who can satisfy a particular need in a current project.</p>

<p>Of course the same situation might happen in a virtual reality ballroom, similar to Hero's trip to the bar in the book "Snow Crash".</p>

<p>Here is a blog that I have maintained for the past year on this project:<br />
<a href="https://interethos.wikispaces.com" title="Wiki for InterEthos project">https://interethos.wikispaces.com</a></p>

<p>&nbsp;</p>
<a name="stories">
<%= render :partial => 'about_toolbar' %>
</a>
<p><strong>Preface</strong></p>

<p>"Beings" can be part of "Groups", but they do not have to be.</p>
<p>"Issues" are concepts in life that have multiple correct answers, and your core beliefs pertaining to those Issues define portions of spirit. Things published by you, or about you, can help define your beliefs surrounding specific Issues. So can your answering certain simple 'litmus test' questions.</p>
<p>"Passions" is the label we used for those core beliefs of Beings. Passions are ultimately measured and shared, toward the end of harmonizing the people of the world.</p>
<p>"Groups" of Beings are invited to answer questions that are specific to, and crafted by the visionary leaders of, those groups. These questions aim to define Beings stance on the Issues associated with the Group.</p>
<p>"Happenings" are the scheduled events or ongoing initiatives of Groups.</p>
<p>"Realms" are linked to from the center of the footer toolbar, a different location from all other indices, as they apply to many of the other indices, and yet are not dependent in the object architecture.</p>

<p>&nbsp;</p>
<p><strong>Stories</strong></p>

<p><strong>Profile registration </strong>
<ol>
<li>Users can register system profiles for</li>
    <li>themselves</li>
    <li>other people, even without permissions of those people</li>
<li>Users can validate ownership of their profile by acknowledging the primary email address associated with it - <strong><em>Phase 2</em></strong></li>
<li>Users can elect to receive individual or "daily/weekly/monthly digest" notifications about posts affecting their profile - <strong><em>Phase 2</em></strong></li>
<li>Users can elect to monitor and maintain their profile</li>
    <li>If they choose to monitor their profile, then auto-reminders will periodically be emailed to them reminding them  - <strong><em>Phase 2</em></strong></li>
</ol></p>

<p><strong>Profile definition</strong>
<ol>
<li>Users must be registered with the system, and also must acknowledge any posts they make as depicted in the following bullets. - <strong><em>Phase 2</em></strong></li>
<li>Users can choose to receive a daily or weekly "digest" of their posts, which may be desirable for intensive users of the system. - <strong><em>Phase 2</em></strong></li>
<li>Users can add Realms to the taxonomy (ie. it is a user-created folksonomy) </li>
    <ol>
    <li>A new index must include</li>
        <ol>
        <li>Name - English names will be used to start, until language indexing functionality is created</li>
        <li>Parent - new index must be children of other pre-existing indexes. This assumes that all top-level indexes are set up at launch, and/or can be requested by users through a special "top-level index addition" process.</li>
        </ol>
    </ol>
<li>Users can create new Issues and Passion tag sets used to discern some aspect of human spirit, and which will consist of one of the following:</li>
    <ol>
    <li>A written question - TBD</li>
    <li>A URI pointing to an existing piece of content  - TBD</li>
    </ol>
<li>Users can create new tags which must include</li>
    <ol>
    <li>An Issue</li>
    <li>Two Realms (or categories) indicating the two opposite elements of spirit that will be delineated by the URI or question.</li>
    </ol>
<li>Users can post tags (existing or new) to users - TBD</li>
<li>Users who wish to "rapidly create and post a tag" need a streamlined one-screen process. It is assumed that the User ID of the person being posted against will be supplied up front, to the first screen. So the user will be able to do the following all in a single screen.</li>
    <ol>
    <li>"Create a Way Point" and  - TBD</li>
    <li>"Post to User". - TBD</li>
    </ol>
<li>Users can (be invited to) answer </li>
    <ol>
    <li>an individual question, or  - TBD</li>
    <li>a group of questions - TBD</li>
    </ol>
</ol></p>

<p><strong>User groups</strong>
<ol>
<li>When a user is created it is not associated with any group, but afterwards may be associated with any number of groups. </li>
<li>Users can be emailed invitations to participate in a group, complete with "subject", "descriptive text", and "host contact information" of the invitation. - TBD</li>
<li>Groups allow multiple profiles to be viewed (see "Profile viewing" below) and compared with the download of a single "click". - TBD</li>
<li>People's profiles can be grouped as might happen in real life as follows: - TBD</li>
    <ol>
    <li>A convention of 250 people might benefit from having all members profiles downloadable with a single group download. (A perfect example of a group is the "ballroom filled with a hundred people" depicted in the "Conceptual Overview" section above. A person who is about to walk into the hall will have direct access to pull all of the profiles for every one in the group.)</li>
    <li>An ongoing "club" might benefit from having an active roster</li>
    </ol>
<li>Group accessibility can be set up to as follows:</li>
    <ol>
    <li>Accessible by the public</li>
    <li>Hidden from the public, and only accessible by group members  - <strong><em>Phase 2</em></strong></li>
    <li>Administrators for a group must be "subscribed" to the group.  - <strong><em>Phase 2</em></strong></li>
    </ol>
</ol></p>

<p><strong>Profile viewing</strong></p>
<ol>
<li>Users can view (pull):</li>
    <ol>
    <li>a single person's profile, or  - TBD</li>
    <li>a group of users's profiles - TBD</li>
    </ol>
<li>The data will be served almost exclusively as XML data sets. - TBD</li>
<li>Users can create lenses describing how they want to view profile data in general for  - <strong><em>Phase 2</em></strong></li>
    <ol>
    <li>All users.</li>
    <li>Certain segments of users</li>
    <li>Lenses can be specific to a group</li>
    </ol>
<li>Users need a viewer to render the XML data in a user-friendly format <strong><em>- Phase 2</em></strong></li>
    <ol>
    <li>Hand-held cell phones and iTouch-like devices need installable applications - TBD</li>
    <li>Graphical icons need to be created to "pictorial-ize" larger profile elements - TBD</li>
    <li>Web browsers will be used as a default viewer, but later custom applications will be built - <strong><em>Phase 2</em></strong></li>
    </ol>
</ol>

<p><strong>Profile dispute process - <strong><em>Phase 2</em></strong></strong></p>
<ol>
<li>Users can dispute tag posts to any profile</li>
    <ol>
    <li>Such disputes will not remove or change a tag post</li>
    <li>Disputes will reflect record of their existence back to the profile of the user that posted the disputed tag.</li>
    </ol>
<li>Users will be encouraged to resolve all disputes, as disputes will reflect back on their own profile poorly</li>
<li>Users can invite other users to assess their disputed situation, and either support their dispute or validate the disputed tag that was posted against their profile.</li>
</ol>

<p><strong>Languages - <strong><em>Phase 2</em></strong></strong></p>
<p>All interface wording must be localized by language and dialect, including interface field names and directions, and all data points. For the sake of visual simplicity the "Languages" table has been removed from the data model graphic (below), as it links to almost all other tables.</p>


<p><strong>Implementation Notes (for Phase 1 only)</strong></p>

<p><strong>Custom integrations to the normal Ruby on Rails environment</strong></p>
<ol>
<li>"Acts as Tree" add-on to render interactive menu trees for self-referential Realms table
<li>Active messaging - to alleviate delays associated with  <strong><em>- Phase 3</em></strong>
<li>synchronous outbound emails, and
<li>broadcasts to groups <strong><em>- Phase 2</em></strong>
<li>XSLT rendering of a demonstrational lense for viewing a sample profile and/or group of profiles <strong><em>- Phase 2</em></strong>
</ol>

<strong><p>Rails Screens</p></strong>
<ol>
<li>Profile registration - Index / Create / Update / Login (very basic login implementation in Phase 1)</li>
<li>Profile definition</li>
    <ol>
    <li>Realms - Index / Create /  Update</li>
    <li>Issues - Index / Create / Update / Search</li>
    <li>Passions - Index / Create / Update / Search</li>
    <li>Post tags (existing or new) to user profiles</li>
        <ol>
        <li>Streamlined screen for "rapid creation and posting of a tag"</li>
        </ol>
    <li>Users can (be invited to) answer</li> 
        <ol>
        <li>an individual question, or</li> 
        <li>a group of questions</li>
        </ol>
    </ol>
<li>User group - Index / Create / Update</li>
    <ol>
    <li>Associate a user with (invite a user to) a group </li>
    <li>View list of users in a group</li>
    </ol>
<li>Profile viewing as XML data sets</li>
    <ol>
    <li>a single person's profile, or </li>
    <li>a group of users's profiles</li>
    <li>demonstration viewer to render the XML data in a user-friendly format</li>
    </ol>
</ol>


<p>&nbsp;</p>
<a name="data_model">
<%= render :partial => 'about_toolbar' %>
</a>
<p><strong>The Data Model underlying "InterEthos"</strong></p>

<%= image_tag("Data_Model.png") %>

<p><em>Note: There is also a "Users" table, in addition to the above tables. It was installed with the Restful Authentication plugin. It is not used by the other tables, and only serves logins.</em></p>

<p>&nbsp;</p>
<a name="crows">
<%= render :partial => 'about_toolbar' %>
</a>
<p><strong>Crows</strong><br />

<p>This project not only included the building of a complex set of data-driven functionality, but a 100% "soul searching" discovery and definition of what that functionality was. I have never seen or used it before (no one has). So this was an excercise in invention, on top of data-driven web programming.</p>

<p>"Act as Tree" was a major plugin, which I customized with:
<ol>
    <li>adding more layers of branching </li>
    <li>adding a session "session[:uroot_id]" variable, which is set by an "...&uroot=#" url variable, and which is used to keep the branch of the "Realms" taxonomy you were last working on expanded. That way you do not come into the "index" Realms view, where all the branches are collapsed by default, and have to keep opening up the branch. You might be in process of adding a new branch having fifty or so sub-realms, and so having to keep opening the branch you are working on is not tolerable. I have implemented that session variable on the "change (triangle icons)" and "add (+ icons)" but ran out of time to do it on the "delete (- icons)". </li>
</ol></p>

<p>Horizontal peach-colored toolbar with "page anchor links" that displays multiple times between the sections of the "About" page</p>

<p>This is an original application totally pulled from my "groping" imagination. 
<ol>
<li>I had no pre-existing data models that I could copy from or build upon.</li>
<li>The final data model of this project is more complex than I should have taken on. Then again, I had to do it. I was possessed.</li>
    <ol>
    <li>It has eleven tables as compared to the seven in MetricsMine.</li>
    <li>In particular I wrestled many hours with the "Issues / Passions" relationship, migrating my code from a simple parent-child two-table model to a three-table HABTM model and finally back down to the simpler parent-child model over a period of weeks. I am still not sure that a Passion should not have the flexibility of being applied to more than one Issue in the broader concept of measuring and sharing the spirit of humans. I wrestled with this for many hours and days and weeks.</li>
    </ol>
</ol></p>

<p>Data model diagram in "About" page
<ol>
    <li>I spent many hours just staring at the data diagram, and at the navbar links of the web interface, trying to imagine the user experience and data flow.</li>
    <li>I also spent much time "mastering" MS Visio to the point that I could keep generating updated "screen snaps" of the data model. This was Key to my being able to conceive of the project's final implementation.</li>
</ol></p>


<p><strong>At one point I totally destroyed all everything...</strong> (code, tables, data diagram), and renamed all the InterEthos table objects (and all related collateral), re-scaffolded everything, and merged the old code back into that new. This effort was done so that the "civilian" users of InterEthos might enjoy a better choice of words describing the various functional aspects of InterEthos, as well as that the envisioned "legions" of open-source code developers might survive <strong>an "alphabetized" heirarchy of the ten (10) tables linked by the four HABTM relationships.</strong> In Rails, the layout of HABTM data objects is so crucial for developers to internalize (especially given the total absence of any SQL statments). With the following new more vibrant names, and with the alphabetizaton, users and developers will hopefully more fully embrace and foster the structure of InterEthos.</p>

<strong><p>Here is the alphabetical listing of the core tables:
<ol>
<li>Beings</li>
<li>BeingsGroups</li>
<li>Groups</li>
<li>GroupsHappenings</li>
<li>Happenings</li>
<li>BeingsHappenings </strong><em>(actually reaches to side of nose-to-toes path, back to the "Beings" table.)</em></li>
<strong><li>HappeningsIssues</li>
<li>Issues</li>
<li>BeingsIssues </strong><em>(this table cuts off the nose-to-toes path, allowing the cardinal relationship of Beings to Issues and Passions.)</em></li>
<strong><li>Passions</li>
</ol></p></strong>

<p>There are other tables as follows, but they do not serve in the cascading nose-to-toes dependent relationship of the above tables:
<ol>
<li>Users <em>(serves user logins, and is not to be confused with "Beings")</em></li>
<li>Validations</li>
<li>Realms <em>(connect across all of the object tables to codify the ethos that happens in "Groups", "Happenings" and most importantly "Passions".)</em></li>
</ol></p>

<p>Of course we expect the number of table objects to change (increase) over time, but at least this core of ten names is alphabetical... and vibrant.</p>

<p>"Data_Add..." migrations via integration of "ar_fixtures" plugin commands in the "</p>

<p>Navigation - On top of a changing data model (described above), I implemented a lengthy drill-down menu through "Beings ===> Groups ===> Happenings ===> Issues ===> Passions". The user experience of this set of functionality is "hairy". There are so many branches to how the user might want to click and edit existing and create new records across that toolbar. You just have to click around for yourself. I did so until I couldn't do so any more!</p>
</ol>

<p>Third party plugins, in order of implementation
<ol>
    <li>Acts_as_tree</li>
    <li>Acts_as_list</li>
    <li>Ar_fixtures - "dump_to_file" and "load_from_file"</li>
    <li>Action_mailer - <em>have not done anything functional with this yet.</em></li>
    <li>Restful_authentication</li>
</ol></p>
</ul>
</p>


<p>&nbsp;</p>
<a name="philosophy">
<%= render :partial => 'about_toolbar' %>
</a>

<p><strong>The Philosphy of "InterEthos"</strong></p>

<p>
It must... 
<ul>
<li>... be useable by everyone, and yet owned by noone</li>

<li>... cataolg the spirit of Individuals,<br />
<%= indent %><%= indent %>including those who are not associated with Groups</li>

<li>... be totally "Spartan" in appearance, and extremely simple to use</li>

<li>... be elemental and monolithic, in its presentation of collective human spirit</li>

<li>... impose an "aura of majesty" on noone</li>

<li>... not rely on users commanding "fancy" technologies, but only the simplest and most ubiquitous</li>

<li>... be built on world-class technologies that<br />
<%= indent %><%= indent %>enable security, speed, and richness of spiritual sharing</li>

<li>... be available for download in its entirety, including its full documentation</li>

<li>... be very easy for other people to replicate in its entirety to other servers</li>

<li>... have a method for integrating the harvested data to a shared "cloud" repository,<br />
<%= indent %><%= indent %>should the implementor and beings-individually be so inclined</li>
</ul>

</p>


<p>&nbsp;</p>
<a name="technical_notes">
<%= render :partial => 'about_toolbar' %>
</a>

<p><strong>Geek Notes</strong></p>

<p>On migrations all of the test data will reload automatically, in all tables. If you run MIGRATION, then your down migration of
<br />
    rake db:migrate version=0110<br />
then that will preserve all login records in the "Users" table. Otherwise you will have to go throught the Restful Authentication process again, with email and all. Also, to save time you might want to leave the "Realms" table data with<br />
    rake db:migrate version=0210<br />
as that takes time to unload and load.</p>

<p>
Following are the notes kept while building the original implementation. Note that the application relied implicitly on "scaffolding", and changed the generated formats only slightly to include things like pull-down menus, redirects on "create" and "update" redirects, and necessary plugins.</p>

<p>
<strong>Scaffolding</strong><br />
Note: the chronological and indentation of the following scaffold commands attempts to show dependencies such that the more indented tables depend on (ie. reference) the less indented tables
</p>

<ul>
    <li>ruby script/generate scaffold realm name:string parent:references</li>
    <li>ruby script/generate scaffold validation name:string</li>
    <li>ruby script/generate scaffold being first_name:string last_name:string email:string validation:references</li>
    <li>ruby script/generate scaffold group name:string description:text privacy:integer realm:references</li>
    <ul>
      <li>ruby script/generate scaffold BeingsGroup group:references being:references</li>
    </ul>
    
    <li>ruby script/generate scaffold happening name:string location:text date_and_time:date description:text group:references realm:references</li>
    <ul>
      <li>ruby script/generate scaffold GroupsHappening group:references happening:references</li>
      <li>ruby script/generate scaffold issue question_or_uri:string happening:references</li>
      <ul>
        <li>ruby script/generate scaffold HappeningsIssue happening:references issue:references</li>
      </ul>
      <li>ruby script/generate scaffold passion name:string issue:references realm:references</li>
      <ul>
        <!--<li>ruby script/generate scaffold IssuesPassion issue:references passion:references</li> -->
        <li>ruby script/generate scaffold BeingsIssue being:references issue:references passion:references</li>
      </ul>
    </ul>
  </ul>
</ul>

<p><strong>Plugins</strong></p>

<p>These plugins are listed in the order of implementation.</p>

<ul>
<li>ruby install git://github.com/rails/acts_as_tree.git</li>
  <ul>
  <li>documented on / installed from: http://github.com/rails/acts_as_tree/tree/master</li>
  </ul>

<li>ruby script/plugin install git://github.com/rails/acts_as_list.git --force</li>

<li>script/plugin install http://topfunky.net/svn/plugins/ar_fixtures</li>
  <ul>
  <li>ruby script/runner "User.dump_to_file"</li>
  <li>ruby script/runner "User.load_from_file"</li>
  </ul>

<li>ruby script/plugin install http://code.openrain.com/rails/action_mailer_tls</li>

<li>Restful Authentication</li>
  <ul>
  <li>http://github.com/technoweenie/restful-authentication/tree/master</li>
  </ul>

<li>ruby script/destroy scaffold Way_Point</li>

<li>http://github.com/swithin/interethos/tree/master</li>

<li>rake routes</li>

<li>ruby script/plugin install http://redhillonrails.rubyforge.org/svn/branches/stable-2.0/vendor/plugins/redhillonrails_core</li>
<li>ruby script/plugin install http://redhillonrails.rubyforge.org/svn/branches/stable-2.0/vendor/plugins/foreign_key_migrations</li>
<li>ruby script/plugin install http://redhillonrails.rubyforge.org/svn/branches/stable-2.0/vendor/plugins/foreign_key_associations</li>
<li>to run these plugins</li>
  <ul>
  <li>rake foreign_key_associations</li>
  <li>rake foreign_key_migrations</li>
  </ul>
</ul>

